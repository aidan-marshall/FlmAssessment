// <auto-generated />
using System;
using BranchProductApp.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BranchProductApp.Core.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250108184516_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BranchProductApp.Core.Branches.Branch", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OpenDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TelephoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("BranchProductApp.Core.ProductBranchMappings.ProductBranchMapping", b =>
                {
                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("BranchId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductBranchMappings");
                });

            modelBuilder.Entity("BranchProductApp.Core.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SuggestedSellingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("WeightedItem")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BranchProductApp.Core.ProductBranchMappings.ProductBranchMapping", b =>
                {
                    b.HasOne("BranchProductApp.Core.Branches.Branch", "Branch")
                        .WithMany("ProductBranchMappings")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BranchProductApp.Core.Products.Product", "Product")
                        .WithMany("ProductBranchMappings")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BranchProductApp.Core.Branches.Branch", b =>
                {
                    b.Navigation("ProductBranchMappings");
                });

            modelBuilder.Entity("BranchProductApp.Core.Products.Product", b =>
                {
                    b.Navigation("ProductBranchMappings");
                });
#pragma warning restore 612, 618
        }
    }
}
